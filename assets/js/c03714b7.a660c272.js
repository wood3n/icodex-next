"use strict";(self.webpackChunkicodex_next=self.webpackChunkicodex_next||[]).push([[6828],{3905:function(n,e,t){t.d(e,{Zo:function(){return c},kt:function(){return g}});var a=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,a,i=function(n,e){if(null==n)return{};var t,a,i={},r=Object.keys(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var l=a.createContext({}),p=function(n){var e=a.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},c=function(n){var e=p(n.components);return a.createElement(l.Provider,{value:e},n.children)},d={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(n,e){var t=n.components,i=n.mdxType,r=n.originalType,l=n.parentName,c=s(n,["components","mdxType","originalType","parentName"]),m=p(t),g=i,u=m["".concat(l,".").concat(g)]||m[g]||d[g]||r;return t?a.createElement(u,o(o({ref:e},c),{},{components:t})):a.createElement(u,o({ref:e},c))}));function g(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var r=t.length,o=new Array(r);o[0]=m;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=n,s.mdxType="string"==typeof n?n:i,o[1]=s;for(var p=2;p<r;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3281:function(n,e,t){t.r(e),t.d(e,{assets:function(){return c},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return d}});var a=t(83117),i=t(80102),r=(t(67294),t(3905)),o=["components"],s={title:"shadcn-ui\u5b9e\u73b0\u539f\u7406",slug:"/shadcn",authors:"oxygen"},l=void 0,p={permalink:"/shadcn",source:"@site/blog/2024-04-28-shadcnui.md",title:"shadcn-ui\u5b9e\u73b0\u539f\u7406",description:"Shadcn ui \u662f\u6700\u8fd1\u6bd4\u8f83\u706b\u7684\u4e00\u4e2a React \u7ec4\u4ef6\u5e93\uff0c\u5b98\u65b9\u4ecb\u7ecd\u5176\u5e76\u975e\u7ec4\u4ef6\u5e93\uff0c\u56e0\u4e3a\u5b83\u5e76\u975e\u57fa\u4e8e npm package \u7684\u5f62\u5f0f\u6765\u7ef4\u62a4\uff0c\u800c\u662f\u901a\u8fc7 nodejs \u547d\u4ee4\u652f\u6301\u5c06\u7ec4\u4ef6\u6e90\u7801\u76f4\u63a5\u590d\u5236\u5230\u4f60\u7684\u9879\u76ee\u4e2d\u3002",date:"2024-04-28T00:00:00.000Z",formattedDate:"2024\u5e744\u670828\u65e5",tags:[],readingTime:46.3,hasTruncateMarker:!0,authors:[{name:"Oxygen",title:"Front End Engineer",url:"https://github.com/wood3n",imageURL:"https://raw.githubusercontent.com/wood3n/wood3n/master/31716713.jpg",key:"oxygen"}],frontMatter:{title:"shadcn-ui\u5b9e\u73b0\u539f\u7406",slug:"/shadcn",authors:"oxygen"},nextItem:{title:"TypeScript\u5168\u5c40\u7c7b\u578b\u5b9a\u4e49\u7684\u65b9\u5f0f",permalink:"/ts-global-defination"}},c={authorsImageUrls:[void 0]},d=[{value:"\u4f7f\u7528",id:"\u4f7f\u7528",level:2},{value:"\u521d\u59cb\u5316",id:"\u521d\u59cb\u5316",level:3},{value:"\u6dfb\u52a0\u7ec4\u4ef6",id:"\u6dfb\u52a0\u7ec4\u4ef6",level:3},{value:"\u66f4\u65b0\u7ec4\u4ef6",id:"\u66f4\u65b0\u7ec4\u4ef6",level:3},{value:"monorepo \u652f\u6301",id:"monorepo-\u652f\u6301",level:2},{value:"cli\u89e3\u6790",id:"cli\u89e3\u6790",level:2},{value:"init",id:"init",level:3},{value:"promptForConfig",id:"promptforconfig",level:4},{value:"fetchRegistry",id:"fetchregistry",level:4},{value:"resolveConfigPaths",id:"resolveconfigpaths",level:4},{value:"runInit",id:"runinit",level:4},{value:"getPackageManager",id:"getpackagemanager",level:4},{value:"add",id:"add",level:3},{value:"getRegistryIndex",id:"getregistryindex",level:4},{value:"resolveTree",id:"resolvetree",level:4},{value:"fetchTree",id:"fetchtree",level:4},{value:"transform",id:"transform",level:4},{value:"diff",id:"diff",level:3},{value:"\u7ec4\u4ef6\u7684\u6ce8\u518c",id:"\u7ec4\u4ef6\u7684\u6ce8\u518c",level:2},{value:"shadcn \u7528\u5230\u7684\u4e00\u4e9b nodejs \u5de5\u5177",id:"shadcn-\u7528\u5230\u7684\u4e00\u4e9b-nodejs-\u5de5\u5177",level:2},{value:"commander",id:"commander",level:3},{value:"prompts",id:"prompts",level:3},{value:"zod",id:"zod",level:3},{value:"cosmiconfig",id:"cosmiconfig",level:3},{value:"tsconfig-paths",id:"tsconfig-paths",level:3},{value:"chalk",id:"chalk",level:3},{value:"ora",id:"ora",level:3},{value:"node-fetch",id:"node-fetch",level:3},{value:"tsx",id:"tsx",level:3}],m={toc:d};function g(n){var e=n.components,s=(0,i.Z)(n,o);return(0,r.kt)("wrapper",(0,a.Z)({},m,s,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Shadcn ui \u662f\u6700\u8fd1\u6bd4\u8f83\u706b\u7684\u4e00\u4e2a React \u7ec4\u4ef6\u5e93\uff0c\u5b98\u65b9\u4ecb\u7ecd\u5176\u5e76\u975e\u7ec4\u4ef6\u5e93\uff0c\u56e0\u4e3a\u5b83\u5e76\u975e\u57fa\u4e8e npm package \u7684\u5f62\u5f0f\u6765\u7ef4\u62a4\uff0c\u800c\u662f\u901a\u8fc7 nodejs \u547d\u4ee4\u652f\u6301\u5c06\u7ec4\u4ef6\u6e90\u7801\u76f4\u63a5\u590d\u5236\u5230\u4f60\u7684\u9879\u76ee\u4e2d\u3002"),(0,r.kt)("p",null,"\u672c\u7bc7\u6587\u7ae0\u4ece\u4f7f\u7528\u5230\u5206\u6790 shadcn cli \u547d\u4ee4\u6e90\u7801\u7684\u5b9e\u73b0\uff0c\u6765\u6df1\u5165\u4e86\u89e3\u8fd9\u4e2a\u7ec4\u4ef6\u5e93\u5185\u90e8\u7684\u4e00\u4e9b\u539f\u7406\u3002"),(0,r.kt)("h2",{id:"\u4f7f\u7528"},"\u4f7f\u7528"),(0,r.kt)("h3",{id:"\u521d\u59cb\u5316"},"\u521d\u59cb\u5316"),(0,r.kt)("p",null,"shadcn ui \u4f9d\u8d56\u4e8e tailwindcss\uff0c\u6240\u4ee5\u4f7f\u7528 shadcn ui \u7684\u7ec4\u4ef6\u9700\u8981\u5b89\u88c5\u548c\u914d\u7f6e tailwindcss\uff0c\u8fd9\u91cc\u5c31\u4e0d\u7ec6\u8bf4\u4e86\u3002"),(0,r.kt)("p",null,"tailwindcss \u5b89\u88c5\u5b8c\u5c31\u53ef\u4ee5\u4f7f\u7528 shadcn ui \u63d0\u4f9b\u7684 cli \u5de5\u5177\u6765\u521d\u59cb\u5316\u4e00\u4e9b\u914d\u7f6e\u4e86\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"npx shadcn-ui@latest init\n")),(0,r.kt)("p",null,"\u6267\u884c",(0,r.kt)("inlineCode",{parentName:"p"},"init"),"\u547d\u4ee4\u4f1a\u8be2\u95ee\u4e0b\u9762\u4e00\u5806\u95ee\u9898\uff0c\u7136\u540e\u53ef\u4ee5\u770b\u5230\u9879\u76ee\u5185\u90e8\u591a\u4e86",(0,r.kt)("inlineCode",{parentName:"p"},"components"),"\u76ee\u5f55\uff08\u5982\u679c\u5df2\u5b58\u5728\u5219\u4e0d\u53d8\uff09\uff0c\u8fd8\u6709\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"components.json"),"\u6587\u4ef6\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image-20240428212404577",src:t(6821).Z,width:"1116",height:"435"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'// components.json\n{\n  "$schema": "https://ui.shadcn.com/schema.json",\n  // \u7ec4\u4ef6\u6837\u5f0f\n  "style": "default",\n  // \u662f\u5426 rsc \u7ec4\u4ef6\n  "rsc": false,\n  // \u662f\u5426\u4f7f\u7528 typescript\n  "tsx": true,\n  // tailwind \u7684\u4e00\u4e9b\u914d\u7f6e\n  "tailwind": {\n    "config": "tailwind.config.js",\n    "css": "app/globals.css",\n    "baseColor": "slate",\n    "cssVariables": false,\n    "prefix": ""\n  },\n  // shadcn \u7ec4\u4ef6\u4f7f\u7528\u5230\u7684 utils \u51fd\u6570\u7684\u5f15\u7528\u8def\u5f84\uff0c\u4ee5\u53ca\u76f8\u4e92\u4e4b\u95f4\u5f15\u7528\u7684\u76f8\u5bf9\u8def\u5f84\n  "aliases": {\n    "components": "@/components",\n    "utils": "@/lib/utils"\n  }\n}\n')),(0,r.kt)("h3",{id:"\u6dfb\u52a0\u7ec4\u4ef6"},"\u6dfb\u52a0\u7ec4\u4ef6"),(0,r.kt)("p",null,"\u4f7f\u7528 cli \u547d\u4ee4\u6dfb\u52a0 shadcn ui \u5177\u6709\u7684\u7ec4\u4ef6\uff0c\u6bd4\u5982\u6dfb\u52a0\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"button"),"\u7ec4\u4ef6"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"npx shadcn-ui@latest add button\n")),(0,r.kt)("p",null,"\u6267\u884c\u5b8c\u4e0a\u9762\u8fd9\u884c\u547d\u4ee4\uff0c\u5c31\u4f1a\u5f80",(0,r.kt)("inlineCode",{parentName:"p"},"components"),"\u76ee\u5f55\u4e0b\u5199\u5165",(0,r.kt)("inlineCode",{parentName:"p"},"button"),"\u7ec4\u4ef6\u4ee3\u7801\uff0c\u8fd9\u4e2a\u7ec4\u4ef6\u5b9e\u73b0\u6bd4\u8f83\u7b80\u5355\uff0c\u6e90\u7801\u5c31\u662f\u4e0b\u9762\u8fd9\u6837\u3002\u53ef\u4ee5\u770b\u5230\u5176\u5185\u90e8\u8fd8\u4f9d\u8d56\u4e86\u4e00\u4e2a\u7ec4\u4ef6\u5e93",(0,r.kt)("inlineCode",{parentName:"p"},"@radix-ui/react-slot"),"\uff0c\uff08\u8fd9\u4e0d\u662f\u5957\u5a03\u5417\ud83d\ude05\uff09"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"shadcn-code",src:t(70477).Z,width:"1430",height:"1640"})),(0,r.kt)("h3",{id:"\u66f4\u65b0\u7ec4\u4ef6"},"\u66f4\u65b0\u7ec4\u4ef6"),(0,r.kt)("p",null,"shadcn \u7684 cli \u8fd8\u6709\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"diff"),"\u547d\u4ee4\u7528\u4e8e\u663e\u793a\u7ec4\u4ef6\u66f4\u65b0\uff0c\u6267\u884c",(0,r.kt)("inlineCode",{parentName:"p"},"diff button"),"\u53ef\u4ee5\u770b\u5230\u5176\u4f1a\u5728\u7ec8\u7aef\u663e\u793a\u8fdc\u7aef\u548c\u672c\u5730\u5b58\u5728\u4e0d\u540c\u7684\u4ee3\u7801\u884c\uff0c\u901a\u8fc7\u84dd\u7eff\u8272\u533a\u5206\u5f00\uff0c\u8bf4\u5b9e\u8bdd\uff0c\u8fd9\u529f\u80fd\u611f\u89c9\u6bd4\u8f83\u9e21\u808b\u3002"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"image-20240428214650945",src:t(28177).Z,width:"1788",height:"751"})),(0,r.kt)("h2",{id:"monorepo-\u652f\u6301"},"monorepo \u652f\u6301"),(0,r.kt)("p",null,"shadcn ui\u63d0\u4f9b\u7684\u4e09\u4e2a cli \u547d\u4ee4\u90fd\u652f\u6301\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"--cwd"),"\u6765\u6307\u5b9a\u9879\u76ee\u7684\u6839\u76ee\u5f55\uff0c\u4e5f\u7b97\u662f\u652f\u6301",(0,r.kt)("inlineCode",{parentName:"p"},"monorepo"),"\u5427\u3002"),(0,r.kt)("h2",{id:"cli\u89e3\u6790"},"cli\u89e3\u6790"),(0,r.kt)("p",null,"shadcn \u7684 cli \u4ee3\u7801\u57fa\u4e8e pnpm workspace \u7684\u7ed3\u6784\uff0c\u867d\u7136\u662f monorepo \u9879\u76ee\uff0c\u4f46 workspace \u4e0b\u53ea\u6709\u4e00\u4e2a cli \u9879\u76ee\uff0c\u4ee3\u7801\u76ee\u5f55\u7ed3\u6784\u8fd8\u662f\u5f88\u7b80\u6d01\u6e05\u6670\u7684\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"src/commands"),"\u4e0b\u5bf9\u5e94\u4e09\u4e2a\u547d\u4ee4\u7684\u6267\u884c\u6587\u4ef6\uff0c\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"index.ts"),"\u5185\u90e8\u5f15\u7528\uff0c\u5e76\u901a\u8fc7",(0,r.kt)("a",{parentName:"p",href:"https://github.com/tj/commander.js"},(0,r.kt)("inlineCode",{parentName:"a"},"Command")),"\u6ce8\u518c\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"src\n \u2523 commands\n \u2503 \u2523 add.ts\n \u2503 \u2523 diff.ts\n \u2503 \u2517 init.ts\n \u2523 utils\n \u2517 index.ts\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { add } from "@/src/commands/add"\nimport { diff } from "@/src/commands/diff"\nimport { init } from "@/src/commands/init"\nimport { Command } from "commander"\n\nimport { getPackageInfo } from "./utils/get-package-info"\n\nprocess.on("SIGINT", () => process.exit(0))\nprocess.on("SIGTERM", () => process.exit(0))\n\nasync function main() {\n  const packageInfo = await getPackageInfo()\n\n  const program = new Command()\n    .name("shadcn-ui")\n    .description("add components and dependencies to your project")\n    .version(\n      packageInfo.version || "1.0.0",\n      "-v, --version",\n      "display the version number"\n    )\n\n  program.addCommand(init).addCommand(add).addCommand(diff)\n\n  program.parse()\n}\n\nmain()\n')),(0,r.kt)("h3",{id:"init"},"init"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"init"),"\u65b9\u6cd5\u5982\u4e0b\uff0c\u6b63\u5982",(0,r.kt)("inlineCode",{parentName:"p"},"init"),"\u547d\u4ee4\u5b9a\u4e49\u7684\u63cf\u8ff0\u90a3\u6837",(0,r.kt)("inlineCode",{parentName:"p"},"initialize your project and install dependencies"),"\uff0c\u5176\u4e3b\u8981\u5de5\u4f5c\u5176\u5b9e\u5c31\u4e24\u6b65\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"li"},"promptForConfig"),"\u65b9\u6cd5\uff0c\u901a\u8fc7\u547d\u4ee4\u884c\u4ea4\u4e92\u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u914d\u7f6e\u4fe1\u606f"),(0,r.kt)("li",{parentName:"ol"},"\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"li"},"runInit"),"\u65b9\u6cd5\u751f\u6210\u914d\u7f6e\u6587\u4ef6",(0,r.kt)("inlineCode",{parentName:"li"},"components.json"),"\u548c\u5b58\u653e",(0,r.kt)("inlineCode",{parentName:"li"},"utils"),"\uff0c",(0,r.kt)("inlineCode",{parentName:"li"},"components"),"\u7684\u76ee\u5f55")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { z } from "zod"\n\nconst initOptionsSchema = z.object({\n  cwd: z.string(),\n  yes: z.boolean(),\n  defaults: z.boolean(),\n})\n\nexport const init = new Command()\n  .action(async (opts) => {\n    try {\n      // \u4f7f\u7528 zod \u6821\u9a8c\u5e76\u83b7\u53d6\u547d\u4ee4\u884c\u8f93\u5165\n      const options = initOptionsSchema.parse(opts)\n      const cwd = path.resolve(options.cwd)\n            \n      // \u68c0\u6d4b\u662f\u5426\u5177\u6709 tailwind \u914d\u7f6e\u6587\u4ef6 tailwind.config.(js|ts)\uff0c\u6ca1\u6709\u5219\u62a5\u9519\n      preFlight(cwd)\n\n      // \u83b7\u53d6\u76ee\u5f55\u4e0bcomponents.json\u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\n      const projectConfig = await getProjectConfig(cwd)\n      if (projectConfig) {\n        // \u5982\u679c\u662f nextjs+typescript \u9879\u76ee\u4e14\u5b58\u5728 tailwind base \u914d\u7f6e\u548c tsconfig paths \u914d\u7f6e\uff0c\u5219\u6267\u884c\u7b80\u5355\u5316\u95ee\u9898\u4ea4\u4e92\n        const config = await promptForMinimalConfig(\n          cwd,\n          projectConfig,\n          opts.defaults\n        )\n        // \u6267\u884c\u751f\u6210\u6587\u4ef6\u6b65\u9aa4\n        await runInit(cwd, config)\n      } else {\n        const existingConfig = await getConfig(cwd)\n        // \u4f7f\u7528 prompts \u8be2\u95ee\u5168\u90e8\u95ee\u9898\n        const config = await promptForConfig(cwd, existingConfig, options.yes)\n        await runInit(cwd, config)\n      }\n\n      logger.info("")\n      logger.info(\n        `${chalk.green(\n          "Success!"\n        )} Project initialization completed. You may now add components.`\n      )\n      logger.info("")\n    } catch (error) {\n      handleError(error)\n    }\n  })\n')),(0,r.kt)("h4",{id:"promptforconfig"},"promptForConfig"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"promptForConfig"),"\u65b9\u6cd5\u6e90\u7801\u5982\u4e0b\uff0c\u5176\u4e3b\u8981\u5de5\u4f5c\u5c31\u662f\u4e09\u6b65\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u4ece\u8fdc\u7aef\u52a0\u8f7d shadcn \u652f\u6301\u7684\u4e3b\u9898\u548c\u57fa\u7840\u8272\u914d\u7f6e\u4fe1\u606f\uff0c\u8fd9\u90e8\u5206\u4fe1\u606f\u9700\u8981\u5728\u547d\u4ee4\u884c\u4ea4\u4e92\u5185\u4f7f\u7528\uff0c\u63d0\u793a\u7528\u6237\u9009\u62e9"),(0,r.kt)("li",{parentName:"ol"},"\u4f7f\u7528\u547d\u4ee4\u884c\u4ea4\u4e92\u83b7\u53d6\u7528\u6237\u504f\u597d\u914d\u7f6e\uff1b"),(0,r.kt)("li",{parentName:"ol"},"\u751f\u6210 components.json \u914d\u7f6e\u6587\u4ef6\uff1b"),(0,r.kt)("li",{parentName:"ol"},"\u6700\u540e\u8fd4\u56de\u89e3\u6790\u914d\u7f6e\u7684\u7ed3\u679c")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'export async function promptForConfig(\n  cwd: string,\n  defaultConfig: Config | null = null,\n  skip = false\n) {\n  // \u83b7\u53d6\u8fdc\u7aef\u4e3b\u9898\u914d\u7f6e\uff0chttps://ui.shadcn.com/registry/styles/index.json\n  const styles = await getRegistryStyles()\n  // \u83b7\u53d6\u7ec4\u4ef6\u57fa\u7840\u8272\u914d\u7f6e\n  const baseColors = await getRegistryBaseColors()\n\n  // \u547d\u4ee4\u884c\u8f93\u5165\u4ea4\u4e92\n  const options = await prompts([...])\n\n  // \u6821\u9a8c\u8f93\u5165\n  const config = rawConfigSchema.parse({...})\n\n  // \u751f\u6210 components.json \u914d\u7f6e\u6587\u4ef6\n  logger.info("")\n  const spinner = ora(`Writing components.json...`).start()\n  const targetPath = path.resolve(cwd, "components.json")\n  await fs.writeFile(targetPath, JSON.stringify(config, null, 2), "utf8")\n  spinner.succeed()\n\n  // \u8fd4\u4f1a\u914d\u7f6e\u89e3\u6790\u4fe1\u606f\uff0c\u5305\u62ec\u89e3\u6790\u5f97\u5230\u7684 components \u5b58\u653e\u76ee\u5f55\u7edd\u5bf9\u8def\u5f84\u7b49\u4fe1\u606f\n  return await resolveConfigPaths(cwd, config)\n}\n\n// \u4ece\u8fdc\u7aef\u83b7\u53d6\u4e3b\u9898\u914d\u7f6e\u6587\u4ef6\nexport async function getRegistryStyles() {\n  try {\n    const [result] = await fetchRegistry(["styles/index.json"])\n\n    return stylesSchema.parse(result)\n  } catch (error) {\n    throw new Error(`Failed to fetch styles from registry.`)\n  }\n}\n\n// \u83b7\u53d6\u4e3b\u9898\u8272\u914d\u7f6e\nexport async function getRegistryBaseColors() {\n  return [\n    {\n      name: "slate",\n      label: "Slate",\n    },\n    {\n      name: "gray",\n      label: "Gray",\n    },\n    {\n      name: "zinc",\n      label: "Zinc",\n    },\n    {\n      name: "neutral",\n      label: "Neutral",\n    },\n    {\n      name: "stone",\n      label: "Stone",\n    },\n  ]\n}\n')),(0,r.kt)("h4",{id:"fetchregistry"},"fetchRegistry"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"promptForConfig"),"\u5185\u90e8\u4f7f\u7528\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"fetchRegistry"),"\u65b9\u6cd5\uff0c\u9ed8\u8ba4\u4ece",(0,r.kt)("inlineCode",{parentName:"p"},"https://ui.shadcn.com"),"\u57df\u540d\u62c9\u53d6\u914d\u7f6e\uff0c\u8fd9\u4e2a\u57df\u540d\u4e5f\u5c31\u662fshadcn ui \u5b98\u65b9\u6587\u6863\u7684\u57df\u540d\u5730\u5740\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"https://ui.shadcn.com/registry/styles/index.json"),"\u83b7\u53d6\u4e00\u4efd\u4e3b\u9898\u914d\u7f6e\uff0c\u5bf9\u5e94",(0,r.kt)("inlineCode",{parentName:"p"},"components.json"),"\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"style")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const baseUrl = process.env.COMPONENTS_REGISTRY_URL ?? "https://ui.shadcn.com"\n\nasync function fetchRegistry(paths: string[]) {\n  try {\n    const results = await Promise.all(\n      paths.map(async (path) => {\n        const response = await fetch(`${baseUrl}/registry/${path}`, {\n          agent,\n        })\n        return await response.json()\n      })\n    )\n\n    return results\n  } catch (error) {\n    console.log(error)\n    throw new Error(`Failed to fetch registry from ${baseUrl}.`)\n  }\n}\n')),(0,r.kt)("h4",{id:"resolveconfigpaths"},"resolveConfigPaths"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"resolveConfigPaths"),"\u5185\u90e8\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"tsconfig-paths"),"\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"createMatchPath"),"\u65b9\u6cd5\u6765\u5bf9",(0,r.kt)("inlineCode",{parentName:"p"},"tconfig.json"),"\u4e2d\u5b9a\u4e49\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"paths"),"\u5b57\u6bb5\u8fdb\u884c\u89e3\u6790\uff0c\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7edd\u5bf9\u8def\u5f84\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { loadConfig, createMatchPath, type ConfigLoaderSuccessResult } from "tsconfig-paths"\n\nexport async function resolveConfigPaths(cwd: string, config: RawConfig) {\n  // \u8bfb\u53d6\u9879\u76ee\u7684tsconfig.json\u6587\u4ef6\n  const tsConfig = await loadConfig(cwd)\n\n  return configSchema.parse({\n    ...config,\n    resolvedPaths: {\n      ...,\n      // \u89e3\u6790\u76f8\u5bf9\u8def\u5f84\u5f97\u5230\u7edd\u5bf9\u8def\u5f84\n      utils: await resolveImport(config.aliases["utils"], tsConfig),\n      components: await resolveImport(config.aliases["components"], tsConfig),\n      ui: config.aliases["ui"]\n        ? await resolveImport(config.aliases["ui"], tsConfig)\n        : await resolveImport(config.aliases["components"], tsConfig),\n    },\n  })\n}\n\n// \u4ece components.json \u4e2d\u5b9a\u4e49\u7684 aliases.utils\uff0caliases.components \u76f8\u5bf9\u8def\u5f84\u89e3\u6790\u5f97\u5230\u7edd\u5bf9\u8def\u5f84\nexport async function resolveImport(\n  importPath: string,\n  config: Pick<ConfigLoaderSuccessResult, "absoluteBaseUrl" | "paths">\n) {\n  return createMatchPath(config.absoluteBaseUrl, config.paths)(\n    importPath,\n    undefined,\n    () => true,\n    [".ts", ".tsx"]\n  )\n}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"createMatchPath"),"\u4e00\u822c\u914d\u5408",(0,r.kt)("inlineCode",{parentName:"p"},"loadConfig"),"\u4f7f\u7528\uff0c\u9996\u5148\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"loadConfig"),"\u8bfb\u53d6\u9879\u76ee\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"tsconfig.json"),"\u6587\u4ef6\uff0c\u5176\u8fd4\u56de\u9879\u76ee\u6839\u76ee\u5f55\u7684\u7edd\u5bf9\u8def\u5f84",(0,r.kt)("inlineCode",{parentName:"p"},"absoluteBaseUrl"),"\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"loadConfig"),"\u51fd\u6570\u7b7e\u540d\u5982\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'export interface ConfigLoaderSuccessResult {\n    resultType: "success";\n    // tsconfig.json \u7684\u7edd\u5bf9\u8def\u5f84\n    configFileAbsolutePath: string;\n    // tsconfig.json \u5b9a\u4e49\u7684 baseUrl\n    baseUrl?: string;\n    // \u57fa\u4e8e baseUrl \u7684\u9879\u76ee\u7edd\u5bf9\u8def\u5f84\n    absoluteBaseUrl: string;\n    // tsconfig.json \u5b9a\u4e49\u7684 paths\n    paths: {\n        [key: string]: Array<string>;\n    };\n    mainFields?: (string | string[])[];\n    addMatchAll?: boolean;\n}\nexport interface ConfigLoaderFailResult {\n    resultType: "failed";\n    message: string;\n}\nexport declare type ConfigLoaderResult = ConfigLoaderSuccessResult | ConfigLoaderFailResult;\nexport declare function loadConfig(cwd?: string): ConfigLoaderResult;\n')),(0,r.kt)("p",null,"\u4f8b\u5982\u5bf9\u4e8e\u4e0b\u9762\u4e00\u4e2a\u9879\u76ee\u7ed3\u6784\u8fd4\u56de\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"absoluteBaseUrl"),"\u5982\u4e0b\uff0c\u6ce8\u610f",(0,r.kt)("inlineCode",{parentName:"p"},"absoluteBaseUrl"),"\u4f1a\u6839\u636e",(0,r.kt)("inlineCode",{parentName:"p"},"baseUrl"),"\u53d8\u5316\uff0c\u4e00\u822c\u662f\u9879\u76ee\u6839\u76ee\u5f55\u540e\u9762\u4e32\u63a5",(0,r.kt)("inlineCode",{parentName:"p"},"baseUrl"),"\u90e8\u5206\u8def\u5f84\uff0c\u6240\u4ee5\u4e0d\u63a8\u8350\u9879\u76ee\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"baseUrl"),"\uff0c\u5f71\u54cd\u7684\u8303\u56f4\u4e0d\u53ef\u63a7\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"tsconfig-path-test\n\u251c\u2500 src\n\u2502  \u2514\u2500 index.ts\n\u251c\u2500 package.json\n\u2514\u2500 tsconfig.json\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"{\n  resultType: 'success',\n  configFileAbsolutePath: 'D:\\\\code\\\\tsconfig-path-test\\\\tsconfig.json',\n  baseUrl: undefined,\n  absoluteBaseUrl: 'D:\\\\code\\\\tsconfig-path-test',\n  paths: { '@/*': [ './src/*' ] },\n  addMatchAll: false\n}\n")),(0,r.kt)("p",null,"\u4ece",(0,r.kt)("inlineCode",{parentName:"p"},"loadConfig"),"\u83b7\u53d6\u5230\u9879\u76ee\u6839\u76ee\u5f55\u7684\u7edd\u5bf9\u8def\u5f84\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u4f20\u5165",(0,r.kt)("inlineCode",{parentName:"p"},"createMatchPath"),"\u65b9\u6cd5\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"createMatchPath"),"\u51fd\u6570\u7b7e\u540d\u5982\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'/**\n * \u5339\u914d\u8def\u5f84\u7684\u65b9\u6cd5\n */\nexport interface MatchPath {\n    (requestedModule: string, readJson?: Filesystem.ReadJsonSync, fileExists?: (name: string) => boolean, extensions?: ReadonlyArray<string>): string | undefined;\n}\n/**\n * \u521b\u5efa\u4e00\u4e2a\u89e3\u6790 tsconfig.json \u4e2d paths \u914d\u7f6e\u7684\u8def\u5f84\u7684\u51fd\u6570\n *\n * @param absoluteBaseUrl \u6839\u636e baseUrl \u5b9a\u4e49\u7684\u9879\u76ee\u6839\u76ee\u5f55\n * @param paths tsconfig.json \u5b9a\u4e49\u7684 paths\n * @param mainFields A list of package.json field names to try when resolving module files. Select a nested field using an array of field names.\n * @param addMatchAll Add a match-all "*" rule if none is present\n */\nexport declare function createMatchPath(absoluteBaseUrl: string, paths: {\n    [key: string]: Array<string>;\n}, mainFields?: (string | string[])[], addMatchAll?: boolean): MatchPath;\n')),(0,r.kt)("p",null,"\u6240\u4ee5\u4e0a\u9762\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"resolveImport"),"\u65b9\u6cd5\u5bf9",(0,r.kt)("inlineCode",{parentName:"p"},"@/components"),"\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"@/lib/utils"),"\u8fd9\u6837\u7684\u76f8\u5bf9\u8def\u5f84\uff0c\u89e3\u6790\u53ef\u4ee5\u5f97\u5230\u5176\u7edd\u5bf9\u8def\u5f84\u5982",(0,r.kt)("inlineCode",{parentName:"p"},"D:\\code\\tsconfig-path-test\\src\\components"),"\u3002"),(0,r.kt)("h4",{id:"runinit"},"runInit"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"runInit"),"\u65b9\u6cd5\u8d1f\u8d23\u751f\u6210",(0,r.kt)("inlineCode",{parentName:"p"},"components"),"\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"utils"),"\u7b49\u76ee\u5f55\uff0c\u4ee5\u53ca\u66ff\u6362",(0,r.kt)("inlineCode",{parentName:"p"},"tailwind.config.ts"),"\u914d\u7f6e\uff0c\u5e76\u5b89\u88c5 shadcn ui \u9700\u8981\u7684\u7b2c\u4e09\u65b9\u7ec4\u4ef6\u5e93\u4f9d\u8d56",(0,r.kt)("inlineCode",{parentName:"p"},"tailwindcss-animate"),"\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"class-variance-authority"),"\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"clsx"),"\u7b49\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'export async function runInit(cwd: string, config: Config) {\n  // \u751f\u6210 components\uff0cutils \u76ee\u5f55\n  for (const [key, resolvedPath] of Object.entries(config.resolvedPaths)) {\n    let dirname = path.extname(resolvedPath)\n      ? path.dirname(resolvedPath)\n      : resolvedPath\n\n    if (!existsSync(dirname)) {\n      await fs.mkdir(dirname, { recursive: true })\n    }\n  }\n\n  const extension = config.tsx ? "ts" : "js"\n\n  const tailwindConfigExtension = path.extname(\n    config.resolvedPaths.tailwindConfig\n  )\n\n  let tailwindConfigTemplate: string\n  if (tailwindConfigExtension === ".ts") {\n    tailwindConfigTemplate = config.tailwind.cssVariables\n      ? templates.TAILWIND_CONFIG_TS_WITH_VARIABLES\n      : templates.TAILWIND_CONFIG_TS\n  } else {\n    tailwindConfigTemplate = config.tailwind.cssVariables\n      ? templates.TAILWIND_CONFIG_WITH_VARIABLES\n      : templates.TAILWIND_CONFIG\n  }\n\n  // \u4f7f\u7528lodash\u7684template\u65b9\u6cd5\u5f80tailwind.config\u91cc\u5199\u5165\u4e00\u4e9b\u914d\u7f6e\u9879\n  await fs.writeFile(\n    config.resolvedPaths.tailwindConfig,\n    template(tailwindConfigTemplate)({\n      extension,\n      prefix: config.tailwind.prefix,\n    }),\n    "utf8"\n  )\n\n  // \u4ecehttps://ui.shadcn.com/registry/colors/[baseColor].json\u83b7\u53d6\u4e3b\u9898\u8272\u914d\u7f6e\u6587\u4ef6\uff0c\u5199\u5165\u5230tailwind \u5168\u5c40 css \u6587\u4ef6\u91cc\n  const baseColor = await getRegistryBaseColor(config.tailwind.baseColor)\n  if (baseColor) {\n    await fs.writeFile(\n      config.resolvedPaths.tailwindCss,\n      config.tailwind.cssVariables\n        ? config.tailwind.prefix\n          ? applyPrefixesCss(baseColor.cssVarsTemplate, config.tailwind.prefix)\n          : baseColor.cssVarsTemplate\n        : baseColor.inlineColorsTemplate,\n      "utf8"\n    )\n  }\n\n  // \u751f\u6210 utils.cn \u6587\u4ef6\n  await fs.writeFile(\n    `${config.resolvedPaths.utils}.${extension}`,\n    extension === "ts" ? templates.UTILS : templates.UTILS_JS,\n    "utf8"\n  )\n\n  // \u5b89\u88c5\u4f9d\u8d56\n  const dependenciesSpinner = ora(`Installing dependencies...`)?.start()\n  const packageManager = await getPackageManager(cwd)\n  const deps = [\n    ...[\n      "tailwindcss-animate",\n      "class-variance-authority",\n      "clsx",\n      "tailwind-merge"\n    ],\n    config.style === "new-york" ? "@radix-ui/react-icons" : "lucide-react",\n  ]\n\n  await execa(\n    packageManager,\n    [packageManager === "npm" ? "install" : "add", ...deps],\n    {\n      cwd,\n    }\n  )\n  dependenciesSpinner?.succeed()\n}\n')),(0,r.kt)("h4",{id:"getpackagemanager"},"getPackageManager"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"getPackageManager"),"\u65b9\u6cd5\u83b7\u53d6\u9879\u76ee\u4f7f\u7528\u7684\u4f9d\u8d56\u7ba1\u7406\u5de5\u5177\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u975e\u5e38\u5b9e\u7528\uff0c\u4e07\u80fd\uff01"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { execa } from "execa";\nimport { detect } from "@antfu/ni"\n\nconst packageManager = await getPackageManager(cwd);\n\n// \u6267\u884c install \u5b89\u88c5\u4f9d\u8d56\nawait execa(\n  packageManager,\n  [packageManager === "npm" ? "install" : "add", ...[\n    "tailwindcss-animate",\n    "class-variance-authority",\n    "clsx",\n    "tailwind-merge",\n    config.style === "new-york" ? "@radix-ui/react-icons" : "lucide-react",\n  ]],\n  {\n    cwd,\n  }\n)\n\n// \u68c0\u6d4b\u5f53\u524d\u4f7f\u7528\u7684 npm package \u7ba1\u7406\u5de5\u5177\nexport async function getPackageManager(\n  targetDir: string\n): Promise<"yarn" | "pnpm" | "bun" | "npm"> {\n  const packageManager = await detect({ programmatic: true, cwd: targetDir })\n\n  if (packageManager === "yarn@berry") return "yarn"\n  if (packageManager === "pnpm@6") return "pnpm"\n  if (packageManager === "bun") return "bun"\n\n  return packageManager ?? "npm"\n}\n')),(0,r.kt)("h3",{id:"add"},"add"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"add"),"\u547d\u4ee4\u7684\u5b9e\u73b0\u4e5f\u6bd4\u8f83\u7b80\u5355\uff0c\u5176\u4e3b\u8981\u5b9e\u73b0\u90e8\u5206\u7684\u6e90\u7801\u5982\u4e0b\uff0c\u53ef\u62c6\u89e3\u4e3a\u4ee5\u4e0b\u56db\u6b65\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"li"},"getRegistryIndex"),"\u83b7\u53d6 shadcn \u6ce8\u518c\u652f\u6301\u7684\u6240\u6709\u7ec4\u4ef6\u53ca\u5176\u4f9d\u8d56\uff1b"),(0,r.kt)("li",{parentName:"ol"},"\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"li"},"resolveTree"),"\u89e3\u6790\u7528\u6237\u6dfb\u52a0\u7684\u7ec4\u4ef6\uff0c\u53ca\u5176\u4f9d\u8d56\u7684\u5176\u4ed6\u5185\u90e8\u7ec4\u4ef6\uff1b"),(0,r.kt)("li",{parentName:"ol"},"\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"li"},"fetchTree"),"\u62c9\u53d6\u7ec4\u4ef6\u6e90\u7801\uff1b"),(0,r.kt)("li",{parentName:"ol"},"\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"li"},"transform"),"\u8f6c\u6362\u7ec4\u4ef6\u6e90\u7801\u5e76\u751f\u6210\u6587\u4ef6")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const add = new Command()\n  .name("add")\n  .argument("[components...]", "the components to add")\n  .option("-y, --yes", "skip confirmation prompt.", true)\n  .option("-o, --overwrite", "overwrite existing files.", false)\n  .option(\n    "-c, --cwd <cwd>",\n    "the working directory. defaults to the current directory.",\n    process.cwd()\n  )\n  .option("-a, --all", "add all available components", false)\n  .option("-p, --path <path>", "the path to add the component to.")\n  .action(async (components, opts) => {\n    try {\n      // \u6821\u9a8c\u547d\u4ee4\u884c\u53c2\u6570\n      const options = addOptionsSchema.parse({\n        components,\n        ...opts,\n      })\n\n      // \u83b7\u53d6\u9879\u76ee\u6839\u76ee\u5f55\u7edd\u5bf9\u8def\u5f84\n      const cwd = path.resolve(options.cwd)\n            \n      // \u8bfb\u53d6\u9879\u76ee\u6839\u76ee\u5f55\u7684\u914d\u7f6e\u6587\u4ef6 components.json\n      const config = await getConfig(cwd)\n            \n      // \u9ed8\u8ba4\u4ece https://ui.shadcn.com/registry/index.json \u83b7\u53d6\u6ce8\u518c\u7ec4\u4ef6\u5217\u8868\n      const registryIndex = await getRegistryIndex()\n\n      let selectedComponents = options.all\n        ? registryIndex.map((entry) => entry.name)\n        : options.components\n\n      // \u83b7\u53d6\u6240\u6709\u8981\u6dfb\u52a0\u7684\u7ec4\u4ef6\u4fe1\u606f\n      const tree = await resolveTree(registryIndex, selectedComponents)\n      // \u83b7\u53d6\u7ec4\u4ef6\u6e90\u7801\n      const payload = await fetchTree(config.style, tree)\n      const baseColor = await getRegistryBaseColor(config.tailwind.baseColor)\n\n      // \u751f\u6210\u7ec4\u4ef6\u4ee3\u7801\u6587\u4ef6\n      const spinner = ora(`Installing components...`).start()\n      for (const item of payload) {\n        const targetDir = await getItemTargetPath(\n          config,\n          item,\n          options.path ? path.resolve(cwd, options.path) : undefined\n        )\n        \n        for (const file of item.files) {\n          let filePath = path.resolve(targetDir, file.name)\n\n          // \u5bf9\u7ec4\u4ef6\u6e90\u7801\u5185\u90e8 import \u8def\u5f84\u7b49\u8fdb\u884cAST\u89e3\u6790\u5e76\u66ff\u6362\n          const content = await transform({\n            filename: file.name,\n            raw: file.content,\n            config,\n            baseColor,\n          })\n\n          await fs.writeFile(filePath, content)\n        }\n\n        // \u5b89\u88c5\u7ec4\u4ef6\u4f9d\u8d56\n        const packageManager = await getPackageManager(cwd)\n\n        // \u5b89\u88c5\u4f9d\u8d56\n        if (item.dependencies?.length) {\n          await execa(\n            packageManager,\n            [\n              packageManager === "npm" ? "install" : "add",\n              ...item.dependencies,\n            ],\n            {\n              cwd,\n            }\n          )\n        }\n      }\n      spinner.succeed(`Done.`)\n    } catch (error) {\n      handleError(error)\n    }\n  })\n')),(0,r.kt)("h4",{id:"getregistryindex"},"getRegistryIndex"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"getRegistryIndex"),"\u4f1a\u9ed8\u8ba4\u4ece\u8fdc\u7aef\u5730\u5740\u2014\u2014",(0,r.kt)("a",{parentName:"p",href:"https://ui.shadcn.com/registry/index.json%E5%8A%A0%E8%BD%BD%E4%B8%80%E4%B8%AA%E7%BB%84%E4%BB%B6%60json%60%EF%BC%8C%E8%BF%99%E4%B8%AA%60json%60%E5%8C%85%E5%90%AB%E4%BA%86"},"https://ui.shadcn.com/registry/index.json\u52a0\u8f7d\u4e00\u4e2a\u7ec4\u4ef6`json`\uff0c\u8fd9\u4e2a`json`\u5305\u542b\u4e86")," shadcn ui \u6240\u6709\u652f\u6301\u7684\u7ec4\u4ef6\u4fe1\u606f\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const registryIndex = await getRegistryIndex()\n\nexport async function getRegistryIndex() {\n  try {\n    const [result] = await fetchRegistry(["index.json"])\n\n    return registryIndexSchema.parse(result)\n  } catch (error) {\n    throw new Error(`Failed to fetch components from registry.`)\n  }\n}\n')),(0,r.kt)("p",null,"\u4f8b\u5982\u6211\u4eec\u6dfb\u52a0\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"button"),"\u7ec4\u4ef6\u7684\u4fe1\u606f\u5982\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'[\n  {\n      "name": "button",\n      "dependencies": [\n          "@radix-ui/react-slot"\n      ],\n      "files": [\n          "ui/button.tsx"\n      ],\n      "type": "components:ui"\n  }\n]\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"json"),"\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"schema"),"\u63cf\u8ff0\u5982\u4e0b\uff0c\u4ece\u4ee3\u7801\u7684 TODO \u6ce8\u91ca\u53ef\u4ee5\u770b\u51fa shadcn \u7684\u7ef4\u62a4\u8005\u6709\u610f\u5c06\u8be5\u90e8\u5206\u6ce8\u518c\u7ec4\u4ef6\u7684 schema \u5171\u4eab\u51fa\u53bb\uff0c\u5e94\u8be5\u662f\u4e3a\u4e86\u66f4\u65b9\u4fbf\u7ec4\u4ef6\u5e93\u7684\u7ef4\u62a4\u8005\u4f7f\u7528\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'// TODO: \u63d0\u53d6\u4e3a\u4e00\u4e2a package\nexport const registryItemSchema = z.object({\n  name: z.string(),  // \u7ec4\u4ef6\u540d\u79f0\n  dependencies: z.array(z.string()).optional(),  // \u7ec4\u4ef6\u4f9d\u8d56\u7684\u7b2c\u4e09\u65b9 package\n  devDependencies: z.array(z.string()).optional(),  // \u7ec4\u4ef6\u5f00\u53d1\u4f9d\u8d56\n  registryDependencies: z.array(z.string()).optional(), // \u7ec4\u4ef6\u4f9d\u8d56\u7684\u5176\u4ed6 shadcn ui \u5185\u90e8\u7684\u7ec4\u4ef6\n  files: z.array(z.string()),  // \u7ec4\u4ef6\u5305\u542b\u7684\u6587\u4ef6\u5217\u8868\uff0c\u76f8\u5bf9\u8def\u5f84\n  type: z.enum(["components:ui", "components:component", "components:example"]), // \u7ec4\u4ef6\u7c7b\u578b\n})\n\nexport const registryIndexSchema = z.array(registryItemSchema)\n')),(0,r.kt)("h4",{id:"resolvetree"},"resolveTree"),(0,r.kt)("p",null,"\u5728\u83b7\u53d6\u5230\u8fdc\u7aef\u6ce8\u518c\u7684\u6240\u6709 shadcn ui \u5185\u90e8\u7ec4\u4ef6\u7684\u4fe1\u606f\u540e\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"resolveTree"),"\u4f1a\u5bf9\u7528\u6237\u9009\u62e9\u6dfb\u52a0\u7684\u7ec4\u4ef6\u8fdb\u884c\u4f9d\u8d56\u89e3\u6790\uff0c\u5f97\u5230\u6240\u6709\u9700\u8981\u6dfb\u52a0\u5230\u9879\u76ee\u5185\u90e8\u7684\u7ec4\u4ef6\u4fe1\u606f\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const tree = await resolveTree(registryIndex, selectedComponents)\n\n/**\n * \u89e3\u6790\u7ec4\u4ef6\u4f9d\u8d56\u5173\u7cfb\uff0c\u5f97\u5230\u6240\u6709\u9700\u8981\u6dfb\u52a0\u5230\u9879\u76ee\u5185\u90e8\u7684\u7ec4\u4ef6\u4fe1\u606f\n * @param index \u6240\u6709\u6ce8\u518c\u7684\u7ec4\u4ef6\u4fe1\u606f\n * @param names \u7528\u6237\u9009\u62e9\u6dfb\u52a0\u7684\u7ec4\u4ef6\n */\nexport async function resolveTree(\n  index: z.infer<typeof registryIndexSchema>,\n  names: string[]\n) {\n  const tree: z.infer<typeof registryIndexSchema> = []\n\n  for (const name of names) {\n    const entry = index.find((entry) => entry.name === name)\n\n    if (!entry) {\n      continue\n    }\n    \n    // \u7528\u6237\u6dfb\u52a0\u7684\u7ec4\u4ef6\u672c\u8eab\n    tree.push(entry)\n\n    // \u6dfb\u52a0\u7684\u7ec4\u4ef6\u6240\u4f9d\u8d56\u7684 shadcn ui \u5185\u90e8\u7684\u7ec4\u4ef6\u4e5f\u9700\u8981\u88ab\u6dfb\u52a0\n    if (entry.registryDependencies) {\n      const dependencies = await resolveTree(index, entry.registryDependencies)\n      tree.push(...dependencies)\n    }\n  }\n\n  // \u8fc7\u6ee4\u4e0d\u540c\u7ec4\u4ef6\u4e4b\u95f4\u4f9d\u8d56\u7684\u76f8\u540c\u7684\u7ec4\u4ef6\n  return tree.filter(\n    (component, index, self) =>\n      self.findIndex((c) => c.name === component.name) === index\n  )\n}\n")),(0,r.kt)("h4",{id:"fetchtree"},"fetchTree"),(0,r.kt)("p",null,"\u5728\u83b7\u53d6\u6240\u6709\u8981\u6dfb\u52a0\u7684\u7ec4\u4ef6\u540e\uff0c\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"fetchTree"),"\u4ece\u8fdc\u7aef\u52a0\u8f7d\u5176\u6e90\u7801\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"const payload = await fetchTree(config.style, tree)\n\n/**\n * \u52a0\u8f7d\u7ec4\u4ef6\u6e90\u7801\n * @param style components.json \u6307\u5b9a\u7684 style\n * @param tree \u7528\u6237\u9009\u62e9\u6dfb\u52a0\u7684\u7ec4\u4ef6\n */\nexport async function fetchTree(\n  style: string,\n  tree: z.infer<typeof registryIndexSchema>\n) {\n  try {\n    const paths = tree.map((item) => `styles/${style}/${item.name}.json`)\n    const result = await fetchRegistry(paths)\n\n    return registryWithContentSchema.parse(result)\n  } catch (error) {\n    throw new Error(`Failed to fetch tree from registry.`)\n  }\n}\n")),(0,r.kt)("p",null,"\u4f8b\u5982",(0,r.kt)("inlineCode",{parentName:"p"},"button"),"\u7ec4\u4ef6\uff0c\u4ece",(0,r.kt)("inlineCode",{parentName:"p"},"https://ui.shadcn.com/registry/styles/default/button.json"),"\u83b7\u53d6\u5230\u5176\u6e90\u7801\u4fe1\u606f\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "button",\n    "dependencies": [\n        "@radix-ui/react-slot"\n    ],\n    "files": [\n        {\n            "name": "button.tsx",\n            "content": "import * as React from \\"react\\"\\nimport { Slot } from \\"@radix-ui/react-slot\\"\\nimport { cva, type VariantProps } from \\"class-variance-authority\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst buttonVariants = cva(\\n  \\"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\\",\\n  {\\n    variants: {\\n      variant: {\\n        default: \\"bg-primary text-primary-foreground hover:bg-primary/90\\",\\n        destructive:\\n          \\"bg-destructive text-destructive-foreground hover:bg-destructive/90\\",\\n        outline:\\n          \\"border border-input bg-background hover:bg-accent hover:text-accent-foreground\\",\\n        secondary:\\n          \\"bg-secondary text-secondary-foreground hover:bg-secondary/80\\",\\n        ghost: \\"hover:bg-accent hover:text-accent-foreground\\",\\n        link: \\"text-primary underline-offset-4 hover:underline\\",\\n      },\\n      size: {\\n        default: \\"h-10 px-4 py-2\\",\\n        sm: \\"h-9 rounded-md px-3\\",\\n        lg: \\"h-11 rounded-md px-8\\",\\n        icon: \\"h-10 w-10\\",\\n      },\\n    },\\n    defaultVariants: {\\n      variant: \\"default\\",\\n      size: \\"default\\",\\n    },\\n  }\\n)\\n\\nexport interface ButtonProps\\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\\n    VariantProps<typeof buttonVariants> {\\n  asChild?: boolean\\n}\\n\\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\\n    const Comp = asChild ? Slot : \\"button\\"\\n    return (\\n      <Comp\\n        className={cn(buttonVariants({ variant, size, className }))}\\n        ref={ref}\\n        {...props}\\n      />\\n    )\\n  }\\n)\\nButton.displayName = \\"Button\\"\\n\\nexport { Button, buttonVariants }\\n"\n        }\n    ],\n    "type": "components:ui"\n}\n')),(0,r.kt)("h4",{id:"transform"},"transform"),(0,r.kt)("p",null,"\u5728\u5f97\u5230\u7ec4\u4ef6\u6e90\u7801\u4ee5\u540e\uff0c\u4ece",(0,r.kt)("inlineCode",{parentName:"p"},"components.json"),"\u4e2d\u89e3\u6790\u914d\u7f6e\u9879",(0,r.kt)("inlineCode",{parentName:"p"},"aliases.components"),"\uff0c\u5f97\u5230\u9879\u76ee\u5b58\u653e\u7ec4\u4ef6\u7684\u76ee\u5f55\u8def\u5f84\uff0c\u7136\u540e\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"transform"),"\u65b9\u6cd5\u5bf9\u7ec4\u4ef6\u6e90\u7801\u8fdb\u884c\u89e3\u6790\uff0c\u5e76\u6700\u7ec8\u751f\u6210\u7ec4\u4ef6\u6587\u4ef6\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'for (const item of payload) {\n  for (const file of item.files) {\n    let filePath = path.resolve(targetDir, file.name)\n\n    // Run transformers.\n    const content = await transform({\n      filename: file.name,\n      raw: file.content,\n      config,\n      baseColor,\n    })\n\n    if (!config.tsx) {\n      filePath = filePath.replace(/\\.tsx$/, ".jsx")\n      filePath = filePath.replace(/\\.ts$/, ".js")\n    }\n\n    await fs.writeFile(filePath, content)\n  }\n}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"transform"),"\u65b9\u6cd5\u5185\u90e8\u4f7f\u7528\u4e86",(0,r.kt)("inlineCode",{parentName:"p"},"ts-morph"),"\u5bf9\u7ec4\u4ef6\u6e90\u7801\u8fdb\u884cAST\u89e3\u6790\uff0c\u5e76\u6839\u636e",(0,r.kt)("inlineCode",{parentName:"p"},"components"),"\u6307\u5b9a\u7684\u914d\u7f6e\u5bf9\u7ec4\u4ef6\u6e90\u7801\u4e2d",(0,r.kt)("inlineCode",{parentName:"p"},"import"),"\u8def\u5f84\uff0cCSS \u53d8\u91cf\uff0ctailwind prefix \u8fdb\u884c\u66ff\u6362\uff0c\u4ee5\u5339\u914d\u5f53\u524d\u9879\u76ee\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { promises as fs } from "fs"\nimport { tmpdir } from "os"\nimport { Project, ScriptKind, type SourceFile } from "ts-morph"\n\n// \u521b\u5efa project \u5b9e\u4f8b\nconst project = new Project({\n  compilerOptions: {},\n})\n\n// \u4f7f\u7528 ts-morph \u5b9a\u4e49\u7684 AST \u8f6c\u6362\u65b9\u6cd5\nconst transformers: Transformer[] = [\n  transformImport,\n  transformRsc,\n  transformCssVars,\n  transformTwPrefixes,\n]\n\n// \u521b\u5efa\u4e34\u65f6\u6587\u4ef6\nasync function createTempSourceFile(filename: string) {\n  // tmpdir \u4f7f\u7528\u7cfb\u7edf\u7684\u4e34\u65f6\u6587\u4ef6\u76ee\u5f55\n  const dir = await fs.mkdtemp(path.join(tmpdir(), "shadcn-"))\n  return path.join(dir, filename)\n}\n\nexport async function transform(opts: TransformOpts) {\n  const tempFile = await createTempSourceFile(opts.filename)\n  // \u4f7f\u7528 project.createSourceFile \u6839\u636e\u6e90\u7801\u521b\u5efa tsx \u6587\u4ef6\n  const sourceFile = project.createSourceFile(tempFile, opts.raw, {\n    scriptKind: ScriptKind.TSX,\n  })\n\n  // \u5bf9import\u8def\u5f84\uff0cCSS \u53d8\u91cf\uff0ctailwind prefix\n  for (const transformer of transformers) {\n    transformer({ sourceFile, ...opts })\n  }\n\n  return await transformJsx({\n    sourceFile,\n    ...opts,\n  })\n}\n')),(0,r.kt)("h3",{id:"diff"},"diff"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"diff"),"\u547d\u4ee4\u5185\u90e8\u4e3b\u8981\u4f7f\u7528\u4e86",(0,r.kt)("a",{parentName:"p",href:"https://github.com/kpdecker/jsdiff"},(0,r.kt)("inlineCode",{parentName:"a"},"diff")),"\u5bf9\u9879\u76ee\u7684\u7ec4\u4ef6\u4ee3\u7801\u548c\u8fdc\u7aef\u7ec4\u4ef6\u4ee3\u7801\u8fdb\u884c\u5bf9\u6bd4\uff0c\u7136\u540e\u8f93\u51fa\u5230 shell \u5185\uff0c\u5177\u4f53\u5b9e\u73b0\u5c31\u4e0d\u7ec6\u8bf4\u4e86\uff0c\u6bd4\u8f83\u7b80\u5355\u3002"),(0,r.kt)("h2",{id:"\u7ec4\u4ef6\u7684\u6ce8\u518c"},"\u7ec4\u4ef6\u7684\u6ce8\u518c"),(0,r.kt)("p",null,"\u6700\u540e\u8bb2\u4e00\u4e0b shadcn ui \u7ec4\u4ef6\u7684\u6ce8\u518c\u65b9\u6cd5\uff0c\u5728\u4e0a\u6587\u5bf9",(0,r.kt)("inlineCode",{parentName:"p"},"add"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"init"),"\u547d\u4ee4\u7684\u89e3\u6790\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230\u7ecf\u5e38\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"fetchRegistry"),"\u8fd9\u4e2a\u65b9\u6cd5\u83b7\u53d6\u8fdc\u7aef",(0,r.kt)("inlineCode",{parentName:"p"},"json"),"\u6587\u4ef6\uff0c\u800c\u5176\u9ed8\u8ba4\u5730\u5740\u5c31\u662f shadcn ui \u5b98\u7f51\u7684\u5730\u5740",(0,r.kt)("inlineCode",{parentName:"p"},"https://ui.shadcn.com/"),"\uff0c\u6240\u4ee5\u8fd9\u91cc\u5c31\u53ef\u4ee5\u5f97\u51fa\u4e00\u4e2a\u7ed3\u8bba\uff0c\u7ec4\u4ef6\u6ce8\u518c\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"index.json"),"\uff0c\u4ee5\u53ca\u4e3b\u9898\u4fe1\u606f",(0,r.kt)("inlineCode",{parentName:"p"},"style.json"),"\u7b49\u4fe1\u606f\u7ef4\u62a4\u5728\u7f51\u7ad9\u76ee\u5f55\u4e0b\uff0c\u4e5f\u5c31\u662f shadcn \u9879\u76ee monorepo \u5185\u90e8\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"apps\\www"),"\u76ee\u5f55\u3002"),(0,r.kt)("p",null,"\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"apps/www"),"\u76ee\u5f55\u4e0b\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"package.json"),"\u4e2d\u53ef\u4ee5\u627e\u5230\u4ee5\u4e0b\u547d\u4ee4\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"scripts": {\n  "build": "contentlayer build && pnpm build:registry && next build",\n  "build:registry": "tsx --tsconfig ./tsconfig.scripts.json ./scripts/build-registry.mts && prettier --loglevel silent --write \\"registry/**/*.{ts,tsx,mdx}\\" --cache",\n},\n')),(0,r.kt)("p",null,"\u5176\u4e2d",(0,r.kt)("inlineCode",{parentName:"p"},"build:registry"),"\u4f1a\u4f7f\u7528",(0,r.kt)("a",{parentName:"p",href:"https://github.com/privatenumber/tsx"},(0,r.kt)("inlineCode",{parentName:"a"},"tsx")),"\u6267\u884c",(0,r.kt)("inlineCode",{parentName:"p"},"./scripts/build-registry.mts"),"\u8fd9\u4e2a\u6587\u4ef6\uff0c\u5176\u5185\u90e8\u6267\u884c\u4ee5\u4e0b\u8fd9\u6bb5\u4ee3\u7801\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { blocks } from "@/registry/blocks"\nimport { examples } from "@/registry/examples"\nimport { Registry } from "@/registry/schema"\nimport { ui } from "@/registry/ui"\n\nconst registry: Registry = [...ui, ...examples, ...blocks]\n\ntry {\n  // safeParse \u65b9\u6cd5\u76f8\u6bd4 parse \u65b9\u6cd5\u5728\u9a8c\u8bc1\u5931\u8d25\u65f6\u4e0d\u4f1a\u629b\u51fa\u9519\u8bef\uff0c\u5176\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5b83\u5305\u542b\u4e24\u4e2a\u5c5e\u6027\uff1asuccess \u548c data \u6216 error\n  const result = registrySchema.safeParse(registry)\n\n  if (!result.success) {\n    console.error(result.error)\n    process.exit(1)\n  }\n\n  await buildRegistry(result.data)\n  await buildStyles(result.data)\n  await buildThemes()\n\n  console.log("\u2705 Done!")\n} catch (error) {\n  console.error(error)\n  process.exit(1)\n}\n')),(0,r.kt)("p",null,"\u5176\u4e2d",(0,r.kt)("inlineCode",{parentName:"p"},"@/registry/ui"),"\u7ef4\u62a4\u7684\u5c31\u662f\u6240\u6709\u7ec4\u4ef6\u7684\u4fe1\u606f\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Registry } from "@/registry/schema"\n\nexport const ui: Registry = [\n  {\n    name: "accordion",\n    type: "components:ui",\n    dependencies: ["@radix-ui/react-accordion"],\n    files: ["ui/accordion.tsx"],\n  },\n  ...\n]\n')),(0,r.kt)("p",null,"\u6267\u884c",(0,r.kt)("inlineCode",{parentName:"p"},"buildRegistry"),"\u4f1a\u6839\u636e",(0,r.kt)("inlineCode",{parentName:"p"},"@/registry/ui"),"\u751f\u6210",(0,r.kt)("inlineCode",{parentName:"p"},"registry/index.json"),"\u6587\u4ef6\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const REGISTRY_PATH = path.join(process.cwd(), "public/registry")\n\nasync function buildRegistry(registry: Registry) {\n  const project = new Project({\n    compilerOptions: {},\n  })\n\n  async function createTempSourceFile(filename: string) {\n    const dir = await fs.mkdtemp(path.join(tmpdir(), "shadcn-"))\n    return path.join(dir, filename)\n  }\n\n  // ----------------------------------------------------------------------------\n  // Build registry/index.json.\n  // ----------------------------------------------------------------------------\n  const names = registry.filter((item) => item.type === "components:ui")\n  const registryJson = JSON.stringify(names, null, 2)\n  rimraf.sync(path.join(REGISTRY_PATH, "index.json"))\n  await fs.writeFile(\n    path.join(REGISTRY_PATH, "index.json"),\n    registryJson,\n    "utf8"\n  )\n}\n')),(0,r.kt)("p",null,"\u6267\u884c",(0,r.kt)("inlineCode",{parentName:"p"},"buildStyles"),"\u4f1a\u751f\u6210\u5305\u542b\u7ec4\u4ef6\u6e90\u7801\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"registry/styles/[style]/[name].json"),"\u6587\u4ef6\uff0c\u8fd9\u4e9b\u751f\u6210\u7684 json \u6587\u4ef6\u653e\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"public"),"\u76ee\u5f55\u4e0b\uff0c\u5728\u7f51\u7ad9\u90e8\u7f72\u7684\u65f6\u5019",(0,r.kt)("inlineCode",{parentName:"p"},"public"),"\u76ee\u5f55\u7684\u6587\u4ef6\u90fd\u4f1a\u62f7\u8d1d\u5230\u7f51\u7ad9\u90e8\u7f72\u7684\u6839\u76ee\u5f55\u4e0b\uff0c\u6240\u4ee5\u540e\u7eed\u5c31\u80fd\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"\u57df\u540d+[json\u6587\u4ef6\u8def\u5f84]"),"\u7684\u5730\u5740\u52a0\u8f7d\u8fd9\u4e9b json \u6587\u4ef6\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'// ----------------------------------------------------------------------------\n// Build registry/styles/[style]/[name].json.\n// ----------------------------------------------------------------------------\nasync function buildStyles(registry: Registry) {\n  for (const style of styles) {\n    const targetPath = path.join(REGISTRY_PATH, "styles", style.name)\n\n    for (const item of registry) {\n      if (item.type !== "components:ui") {\n        continue\n      }\n\n      const files = item.files?.map((file) => {\n        // // \u5bf9\u5e94 apps\\www\\registry \u4e0b\u7ec4\u4ef6\u4ee3\u7801\u8def\u5f84\n        const content = readFileSync(\n          path.join(process.cwd(), "registry", style.name, file),\n          "utf8"\n        )\n\n        return {\n          name: basename(file),\n          content,\n        }\n      })\n\n      const payload = {\n        ...item,\n        files,\n      }\n\n      await fs.writeFile(\n        path.join(targetPath, `${item.name}.json`),\n        JSON.stringify(payload, null, 2),\n        "utf8"\n      )\n    }\n  }\n}\n')),(0,r.kt)("h2",{id:"shadcn-\u7528\u5230\u7684\u4e00\u4e9b-nodejs-\u5de5\u5177"},"shadcn \u7528\u5230\u7684\u4e00\u4e9b nodejs \u5de5\u5177"),(0,r.kt)("h3",{id:"commander"},"commander"),(0,r.kt)("p",null,"\u6ce8\u518c nodejs cli \u547d\u4ee4\u4ee5\u53ca cli \u53c2\u6570\uff0c\u4ee5\u53ca\u83b7\u53d6 cli \u8f93\u5165\uff0c\u6267\u884c\u64cd\u4f5c\u7b49\u3002"),(0,r.kt)("h3",{id:"prompts"},"prompts"),(0,r.kt)("p",null,"cli \u8f93\u5165\u4ea4\u4e92"),(0,r.kt)("h3",{id:"zod"},"zod"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"zod")," \u662f\u4e00\u4e2a\u7528\u4e8e TypeScript \u548c JavaScript \u7684\u6570\u636e\u9a8c\u8bc1\u5e93\u3002\u5b83\u5141\u8bb8\u5f00\u53d1\u8005\u5b9a\u4e49\u4e00\u4e2a\u6a21\u5f0f\uff08schema\uff09\uff0c\u8fd9\u4e2a\u6a21\u5f0f\u63cf\u8ff0\u4e86\u6570\u636e\u5e94\u8be5\u5982\u4f55\u7ed3\u6784\u5316\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u5b57\u6bb5\u7684\u7c7b\u578b\u662f\u4ec0\u4e48\u3002\u53ef\u4ee5\u5728 node \u548c web \u73af\u5883\u4e0b\u4f7f\u7528\u3002"),(0,r.kt)("h3",{id:"cosmiconfig"},"cosmiconfig"),(0,r.kt)("p",null,"\u67e5\u627e\u6216\u8bfb\u53d6",(0,r.kt)("inlineCode",{parentName:"p"},"json"),"\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"yml"),"\u7b49\u914d\u7f6e\u6587\u4ef6"),(0,r.kt)("h3",{id:"tsconfig-paths"},"tsconfig-paths"),(0,r.kt)("p",null,"\u89e3\u6790",(0,r.kt)("inlineCode",{parentName:"p"},"tsconfig.json"),"\u4e2d\u5b9a\u4e49\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"paths"),"\u7684\u6a21\u5757\u8def\u5f84\u3002"),(0,r.kt)("h3",{id:"chalk"},"chalk"),(0,r.kt)("p",null,"cli \u6253\u5370\u989c\u8272\u6587\u5b57"),(0,r.kt)("h3",{id:"ora"},"ora"),(0,r.kt)("p",null,"cli loading \u4ea4\u4e92\u6548\u679c"),(0,r.kt)("h3",{id:"node-fetch"},"node-fetch"),(0,r.kt)("p",null,"nodejs \u4e2d\u4f7f\u7528 fetch"),(0,r.kt)("h3",{id:"tsx"},"tsx"),(0,r.kt)("p",null,"\u652f\u6301\u76f4\u63a5\u5728 node \u547d\u4ee4\u884c\u4e2d\u6267\u884c typescript \u6587\u4ef6\u3002"))}g.isMDXComponent=!0},6821:function(n,e,t){e.Z=t.p+"assets/images/image-20240428212404577-fac654b9881e3c430ec76e5087a982a2.png"},28177:function(n,e,t){e.Z=t.p+"assets/images/image-20240428214650945-c00627f82867495fe808d036de5def94.png"},70477:function(n,e,t){e.Z=t.p+"assets/images/shadcn-code-b32f1c56852eb122fb815dc820d05b30.png"}}]);